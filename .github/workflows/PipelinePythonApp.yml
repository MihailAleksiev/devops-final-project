name: Pipeline-PythonApp
on:
  push:
    branches:
      - branch-one
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.9
    - run: echo "Job status is ${{ job.status }}."
    - run: echo "${{secrets.PASSWORD}}"
  check-code-pylint:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.9
    - run: |
        python -m pip install --upgrade pip
        pip install pylint
    - run: python lint_test.py
    - run: echo "Job status is ${{ job.status }}."
    - run: echo "${{secrets.PASSWORD}}"
  check-code-style:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.10.2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pycodestyle
    - name: Style with pycodestyle
      run: |
        pycodestyle *.py
  simulate-build:
    needs: check-code-style
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
  unit-test:
    needs: simulate-build
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Unit-testing
      run: |
        python --version
        python3 -m doctest factorial.py
  sonarcloud-SAST:
    needs: check-code-style
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy-to-production:
    needs: [ unit-test, sonarcloud-SAST ]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/simplewhale:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
